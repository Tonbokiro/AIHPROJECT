name: CI/CD Pipeline to deploy health-serve-chatbot to AWS Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Upgrade pip to the latest version
      run: |
        python -m pip install --upgrade pip

    - name: Build Docker image
      run: |
        docker build -t health-serve-chatbot \
        --build-arg OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
        --build-arg TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }} \
        --build-arg LANGCHAIN_API_KEY=${{ secrets.LANGCHAIN_API_KEY }} .
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v1.8.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        logout: true
  
    - name: Push Docker image to Docker Hub
      run: |
        docker tag health-serve-chatbot:latest ${{ secrets.DOCKERHUB_USERNAME }}/health-serve-chatbot:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/health-serve-chatbot:latest

    - name: Get Timestamp
      uses: gerred/actions/current-time@master
      id: current-time

    - name: Run String Replace
      uses: frabert/replace-string-action@master
      id: format-time
      with:
        pattern: '[:\.]+'
        string: "${{ steps.current-time.outputs.time }}"
        replace-with: '-'
        flags: 'g'

    - name: Generate Deployment Package
      run: |
        zip -r deploy.zip Dockerrun.aws.json
    
    # Deploy to an existing AWS Elastic Beanstalk environment, called tsy-iabs-env
    - name: Deploy to AWS Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: ${{ secrets.AWS_EBS_APPLICATION_NAME }}
        environment_name: ${{ secrets.AWS_EBS_ENVIRONMENT_NAME }}
        version_label: "docker-app-${{ steps.format-time.outputs.replaced }}"
        region: ap-southeast-1
        wait_for_deployment: false
        deployment_package: deploy.zip